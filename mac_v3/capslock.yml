---
title: Capslock Enhancement
url: https://vonng.com/capslock.json
version: 3.0.3
maintainers: [ Vonng ]
author: Vonng(rh@vonng.com)
website: http://capslock.vonng.com
json_url: https://vonng.com/capslock.json
import_url: karabiner://karabiner/assets/complex_modifications/import?url=https://vonng.com/capslock.json
gallery_url: https://ke-complex-modifications.pqrs.org/#emulation-modes
repo: https://github.com/Vonng/Capslock


rules:

  ################################################################
  #                    Capslock to Esc/Hyper                     #
  ################################################################
  - description: CapsLock to Hyper
    manipulators:

      - description: 'capslock = esc(click) | hyper(hold)'
        type: basic
        from: { key_code: caps_lock ,modifiers: { optional: [ any ] } }
        to: [ { key_code: right_shift,modifiers: [ right_command,right_control,right_option ] } ]
        to_if_alone: [ { key_code: escape } ]




  ################################################################
  #                       Hyper Navigation                       #
  ################################################################
  - description: Hyper Navigation
    manipulators:

      #==========================================================#
      # Arrow keys                                               #
      #==========================================================#

      - description: ' k = up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow } ]

      - description: ' j = down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow } ]
        
      - description: ' h = left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow } ]

      - description: ' l = right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow } ]

      #==========================================================#
      # Command + Arrow keys                                     #
      #==========================================================#

      # command: up 5 lines
      - description: 'command + k = command up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow }, { key_code: up_arrow }, { key_code: up_arrow }, { key_code: up_arrow }, { key_code: up_arrow } ]

      # command: down 5 lines
      - description: 'command + j = command down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow }, { key_code: down_arrow }, { key_code: down_arrow }, { key_code: down_arrow }, { key_code: down_arrow } ]

      - description: 'command + h = command + left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_command ] } ]

      - description: 'command + l = command right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_command ] } ]


      #==========================================================#
      # Option + Arrow keys                                      #
      #==========================================================#

      - description: 'option + k = option up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_option] } ]

      - description: 'option + j = option down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_option ] } ]

      - description: 'option + h = option left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_option ] } ]

      - description: 'option + l = option right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_option] } ]

      #==========================================================#
      # Shift + Arrow keys                                       #
      #==========================================================#

      - description: 'shift + l = shift right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift ] } ]
        
      - description: 'shift + h = shift + left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_shift ] } ]
        
      - description: 'shift + j = shift + down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_shift ] } ]

      - description: 'shift + k = shift up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_shift ] } ]

      #==========================================================#
      # Control + Arrow keys                                     #
      #==========================================================#

      - description: 'control + l = ctrl + right (next desktop)'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_control ] } ]

      - description: 'control + h = ctrl + left (prev desktop)'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_control ] } ]
      
      - description: 'control + k = ctrl + up (expose all)'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]

      - description: 'control + j = ctrl + down (focus application)'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_control ] } ]

      #==========================================================#
      # Number pad                                               #
      #==========================================================#
      - description: 'shift + control + n = 0'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '0' } ]

      - description: 'shift + control + m = 1'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '1' } ]

      - description: 'shift + control + comma = 2'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '2' } ]

      - description: 'shift + control + period = 3'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '3' } ]

      - description: 'shift + control + j = 4'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '4' } ]

      - description: 'shift + control + k = 5'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '5' } ]

      - description: 'shift + control + l = 6'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '6' } ]

      - description: 'shift + control + u = 7'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '7' } ]

      - description: 'shift + control + i = 8'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '8' } ]

      - description: 'shift + control + o = 9'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '9' } ]

      #==========================================================#
      # Other keys                                               #
      #==========================================================#

      # Enter
      - description: ' u = enter'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: return_or_enter } ]

      - description: 'command + u = command + enter'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: return_or_enter, modifiers: [ left_command ] } ]

      - description: 'command + shift + u = command + shift + enter'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_command, left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: return_or_enter, modifiers: [ left_command, left_shift ] } ]

      - description: ' i = home'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: home } ]

      - description: ' o = end'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end } ]

      - description: 'q = backspace'
        type: basic
        from: { key_code: q, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace , modifiers: [ ] } ]

      - description: 'a = delete forward'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward , modifiers: [ ] } ]

      - description: 'x = option + delete word ahead'
        type: basic
        from: { key_code: x, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward, modifiers: [ left_option ] } ]

      - description: 'd = option + delete_or_backspace'
        type: basic
        from: { key_code: d, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace , modifiers: [ left_option ] } ]

      - description: 'spacebar = _ hyphen'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: hyphen , modifiers: [ left_shift ] } ]


      #==========================================================#
      # ( a ) --> window management                              #
      #==========================================================#

      - description: 'command + a = expose all'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]




  ################################################################
  #                      Hyper Application                       #
  ################################################################
  - description: Hyper Application
    manipulators:

      #==========================================================#
      # ( e ) --> finder / finder downloads / finder home                         #
      #==========================================================#
      - description: 'command + e = Finder Downloads'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open $HOME/Downloads } ]

      - description: 'option + e = Finder Home'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open $HOME } ]

      - description: 'e = Finder'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a finder } ]


      #==========================================================#
      # ( t ) --> iterm                                          #
      #==========================================================#

      - description: 't = iTerm2'
        type: basic
        from: { key_code: t, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a iTerm } ]


...